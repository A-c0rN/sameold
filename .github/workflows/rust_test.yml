name: Test

on:
  push:
    branches: [ "release/**" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test_sameold:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        features: ['', 'chrono']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Record environment
      shell: bash
      run: cargo version

    - uses: actions/cache@v3
      name: Restore Rust cache
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build and test sameold
      shell: bash
      run: |
        cargo test -p sameold --verbose --no-default-features --features "${{ matrix.features }}"

  test_samedec:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Record environment
      shell: bash
      run: cargo version

    - uses: actions/cache@v3
      name: Restore Rust cache
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build and test samedec
      shell: bash
      run: |
        cargo test -p samedec --verbose

    - name: Run integration tests
      shell: bash
      run: |
        EXPECT="$(cat <sample/long_message.22050.s16le.txt)" &&
        OUT="$(cargo run -p samedec -- -r 22050 <sample/long_message.22050.s16le.bin)" &&
        echo "$OUT" &&
        if [ "$OUT" = "$EXPECT" ]; then
          echo "PASS";
        else
          echo "FAIL!";
          exit 1;
        fi
